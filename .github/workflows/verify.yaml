name: Verify
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "*"

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        if: github.event_name == 'pull_request'
        uses: styfle/cancel-workflow-action@0.9.1

      - name: Checkout
        uses: actions/checkout@v2

      - name: Unlock
        uses: sliteteam/github-action-git-crypt-unlock@1.2.0
        env:
          GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}

      - name: Setup Kind
        uses: helm/kind-action@v1.2.0

      - name: Create admin user and replace token
        run: |
          kubectl -n kube-system create serviceaccount pepa
          kubectl create clusterrolebinding pepa-cluster-admin --clusterrole=cluster-admin --serviceaccount=kube-system:pepa

          export TOKENNAME=`kubectl -n kube-system get serviceaccount/pepa -o jsonpath='{.secrets[0].name}'`
          export TOKEN=`kubectl -n kube-system get secret $TOKENNAME -o jsonpath='{.data.token}'| base64 --decode`

          cat ~/.kube/config

          export API_URL=`awk '/server/{print $NF}' ~/.kube/config`
          sed -i -e "s#server_api_url#$API_URL#g" -e "s#placeholder#$TOKEN#g" -e "s#configpath#$GITHUB_WORKSPACE#g" install/examples/clusters.yaml

          cat install/examples/clusters.yaml

      - name: Install Prometheus
        run: |
          kubectl apply -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml

      - name: Install ansible dependencies
        run: |
          ansible-galaxy collection install -r install/collections/requirements.yml
          /opt/pipx/venvs/ansible-core/bin/python -m pip install openshift pyyaml kubernetes

      - name: Install CICD
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: install/tealc-play-gh-actions.yaml
          options: |
            --tags infra,strimzi-infra,admin-access
            --extra-vars log_sensitive_data=true

      - name: Try test pipeline
        run: |
          ./.github/workflows/test-scripts/run-test-pipeline.sh

      - name: Delete CICD
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: install/tealc-play-gh-actions.yaml
          options: |
            --tags teardown
            --extra-vars log_sensitive_data=true

      - name: Print kube status
        if: failure()
        run: |
          oc get ns
          echo "--------------------------------------"
          oc get po --all-namespaces
          echo "--------------------------------------"
          oc get events --all-namespaces
          echo "--------------------------------------"
