---
- name: Create monitoring namespace on Infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    name: "{{ infra_monitoring_namespace }}"
    api_version: v1
    kind: Namespace
    state: present
  when:
    - '"admin-access" in ansible_run_tags'

- name: Enable user-workload on infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "openshift-monitoring"
    state: present
    src: files/user-workload-cm.yaml
  when:
    - '"admin-access" in ansible_run_tags'

- name: Enable user-workload on worker cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ worker.name }}"
    namespace: "openshift-monitoring"
    state: present
    src: files/user-workload-cm.yaml
  loop:
    - "{{ workers.source_cluster }}"
    - "{{ workers.target_cluster }}"
  loop_control:
    loop_var: worker

- name: Create image pull secret on infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_monitoring_namespace }}"
    state: present
    src: "{{ grafana_docker_secret_path }}"
  when:
    - '"admin-access" in ansible_run_tags'

- name: Create image pull secret on worker cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ worker.name }}"
    namespace: "{{ worker.monitoring_namespace }}"
    state: present
    src: "{{ grafana_docker_secret_path }}"
  loop:
    - "{{ workers.source_cluster }}"
    - "{{ workers.target_cluster }}"
  loop_control:
    loop_var: worker

- name: Create grafana session secret on infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_monitoring_namespace }}"
    state: present
    src: "{{ grafana_session_secret_path }}"
  when:
    - '"admin-access" in ansible_run_tags'

- name: Sleep for 10 seconds and continue with play
  wait_for:
    timeout: 10
  when: not is_kubernetes

- name: Setup Grafana on Infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_monitoring_namespace }}"
    state: present
    template: templates/grafana/grafana-setup.yaml.j2
  when:
    - '"admin-access" in ansible_run_tags'

- name: Install Grafana operator on Infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_monitoring_namespace }}"
    state: present
    template: templates/grafana/grafana-operator.yaml.j2
  when:
    - '"admin-access" in ansible_run_tags'

- name: Sleep for 20 seconds and continue with play
  wait_for:
    timeout: 20

- name: Wait for Grafana operator on Infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_monitoring_namespace }}"
    kind: Deployment
    name: grafana-operator-controller-manager
    wait: true
    wait_condition:
      type: Available
      status: True
      reason: MinimumReplicasAvailable
  when:
    - '"admin-access" in ansible_run_tags'

- name: Deploy Grafana instance on Infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_monitoring_namespace }}"
    state: present
    template: templates/grafana/grafana.yaml.j2

- name: Create data-sources on Infra cluster
  include_tasks: deploy-data-source.yaml
  loop:
    - {name: "{{ infra_context_name }}", sa_namespace: "{{ infra_monitoring_namespace }}",
       monitoring_namespace: "{{ infra_monitoring_namespace }}",
       context: "{{ infra_context_name }}",
       url: " https://thanos-querier.openshift-monitoring.svc.cluster.local:9091"}
  loop_control:
    loop_var: target
  when:
    - '"admin-access" in ansible_run_tags'

- name: Create data-sources on Infra cluster
  include_tasks: deploy-data-source.yaml
  loop:
    - {name: "{{ workers.source_cluster.name }}", sa_namespace: "{{ workers.source_cluster.monitoring_namespace }}",
       monitoring_namespace: "{{ infra_monitoring_namespace }}",
       context: "{{ infra_context_name }}",
       url: "https://thanos-querier-openshift-monitoring.apps.{{ workers.source_cluster.name }}.strimzi.app-services-dev.net:443"}
    - {name: "{{ workers.target_cluster.name }}", sa_namespace: "{{ workers.target_cluster.monitoring_namespace }}",
       monitoring_namespace: "{{ infra_monitoring_namespace }}",
       context: "{{ infra_context_name }}",
       url: "https://thanos-querier-openshift-monitoring.apps.{{ workers.target_cluster.name }}.strimzi.app-services-dev.net:443"}
  loop_control:
    loop_var: target

- name: Configure Alertmanager to for sending alerts on Infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    state: present
    template: templates/alert-manager-configuration.yaml.j2
  when:
    - '"admin-access" in ansible_run_tags'

- name: Configure Alertmanager to for sending alerts on Worker clusters
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ worker.name }}"
    state: present
    template: templates/alert-manager-configuration.yaml.j2
  loop:
    - "{{ workers.source_cluster }}"
    - "{{ workers.target_cluster }}"
  loop_control:
    loop_var: worker

- name: Configure Grafana dashboards and Prometheus alerts on Infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_monitoring_namespace }}"
    state: present
    src: "files/argo/metrics/{{ item }}"
  loop:
    - argo-dashboard-cm.yaml
    - grafana-argo-dashboards.yaml
  when:
    - '"admin-access" in ansible_run_tags'

- name: Configure Prometheus alerts on Infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_argo_namespace }}"
    state: present
    src: "files/argo/metrics/{{ item }}"
  loop:
    - alerts.yaml
  when:
    - '"admin-access" in ansible_run_tags'