---
# Get Grafana access token and update clusters data
- name: "Export access token for {{ cluster.name }}"
  shell: "oc get secret {{ sa_name }} -n {{ cluster.monitoring_namespace }} -o=jsonpath='{.data.token}' | base64 -d"
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}/{{ cluster.name }}"
  register: "access_token_out"

- debug:
    msg: "{{ access_token_out }}"

- name: "Set facts grafana access token - {{ cluster.name }}"
  set_fact: access_token="{{ access_token_out.stdout }}"

- name: Check that token exists
  fail:
    msg: "Token is not properly stored!\n{{ access_token }}"
  when: access_token | length == 0

- name: "Update facts for {{ cluster.name }}"
  ansible.utils.update_fact:
    updates:
      - path: "clusters_dict['{{ cluster.name }}'].grafana"
        value: {}
      - path: "clusters_dict['{{ cluster.name }}'].grafana.token"
        value: "{{ access_token_out.stdout }}"
      - path: "clusters_dict['{{ cluster.name }}'].grafana.url"
        value: "https://thanos-querier-openshift-monitoring.apps.{{ cluster.name }}.{{ cluster_domain }}:443"
  register: updated_data
  when: is_worker is defined

- set_fact:
    clusters_dict: "{{ updated_data.clusters_dict }}"
  when: is_worker is defined

- name: "Create Grafana data-source {{ datasource_name }}"
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ cluster.monitoring_namespace }}"
    state: present
    apply: true
    template: templates/grafana/grafana-data-source.yaml.j2
    verify_ssl: no
  vars:
    access_token: "{{ access_token_out.stdout }}"
