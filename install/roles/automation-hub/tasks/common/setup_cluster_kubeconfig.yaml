##################################
#### Set kubeconfig data from yaml
##################################
- name: "Update facts for {{ cluster.name }} - kubeconfig based"
  ansible.utils.update_fact:
    updates:
      - path: "clusters_dict['{{ cluster.name }}'].serverUrl"
        value: "{{ cluster.kubeconfig.serverUrl }}"
      - path: "clusters_dict['{{ cluster.name }}'].provisionRefName"
        value: "{{ cluster.name }}"
  register: updated_data
  when: cluster.kubeconfig is defined

- set_fact:
    clusters_dict: "{{ updated_data.clusters_dict }}"
  when: cluster.kubeconfig is defined

- name: "Update facts for {{ cluster.name }}"
  ansible.utils.update_fact:
    updates:
      - path: "clusters_dict['{{ cluster.name }}'].exists"
        value: True
      - path: "clusters_dict['{{ cluster.name }}'].provisioned"
        value: True
  when: cluster.kubeconfig is defined
  register: kubeconfig_defined

- set_fact:
    clusters_dict: "{{ kubeconfig_defined.clusters_dict }}"
  when: cluster.kubeconfig is defined

- set_fact:
    kubeconfig_data: "{{ cluster.kubeconfig.kubeconfig }}"
  when: cluster.kubeconfig is defined

- name: Create kubeconfig for {{ cluster.name }}
  copy:
    content: "{{ kubeconfig_data | b64decode }}"
    dest: "{{ kubeconfig_path }}/{{ cluster.name }}"
  when: cluster.kubeconfig is defined

#####################
#### Common part ####
#####################
- name: Set proper rights for kubeconfigs on {{ cluster.name }}
  file:
    path: "{{ kubeconfig_path }}/{{ cluster.name }}"
    mode: '0755'
  when: clusters_dict[cluster.name].provisioned
