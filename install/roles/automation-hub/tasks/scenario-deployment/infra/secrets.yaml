---
- name: Create secrets namespace on worker clusters
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ cluster_name }}"
    state: present
    verify_ssl: no
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ skodjob_secrets_namespace }}"
        labels:
          project: "skodjob"
  loop: "{{ worker_clusters }}"
  loop_control:
    loop_var: cluster_name

- name: "Create / patch OAuth secrets on every *upstream* worker"
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig_path }}/{{ item.1.name }}"
    namespace: "{{ skodjob_secrets_namespace }}"
    apply: true
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: "{{ item[0].key | replace('_', '-') }}"
        labels:
          project: skodjob
          app: clients
          clientType: oauth
        annotations:
          replicator.v1.mittwald.de/replicate-to: "strimzi-.*oauth.*,streams-.*oauth.*,strimzi-clients.*"
      data:
        clientSecret: "{{ item[0].value | b64encode }}"   # the secret payload
  # The following will produce something like
  # [
  #  { "key": "secret_name_1", "value": "secret_value_1" },
  #  { "name": "cluster_1", "environment": "upstream" }
  # ]
  loop: >-
    {{
      rhbk_clients.secrets
      | dict2items
      | product(
          workers
          | selectattr('environment', 'equalto', 'upstream')
          | list
        )
      | list
    }}
  loop_control:
    label: "{{ item[1].name }} : {{ item[0].key | replace('_', '-') }}"