---
- name: "Create namespaces on Infra cluster"
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    state: present
    verify_ssl: no
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ item }}"
        labels:
          project: "skodjob"
  loop:
    - "{{ infra_ci_namespace }}"
    - "{{ openshift_pipelines_namespace }}"
    - "{{ infra_argo_namespace }}"
    - "{{ infra_workflows_namespace }}"

- name: "Create ServiceAccount for remote access on {{ worker.name }}"
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ worker.name }}"
    namespace: "default"
    state: present
    verify_ssl: no
    src: templates/remote_access_sa.yaml

- name: "Export access token on {{ worker.name }}"
#  shell: "oc serviceaccounts get-token access-serviceaccount -n default"
  shell: "oc get secret access-serviceaccount -n default -o=jsonpath='{.data.token}' | base64 -d"
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}/{{ worker.name }}"
  register: "access_token_out"

- name: "Set facts for route host - {{ worker.name }}"
  set_fact: access_token="{{ access_token_out.stdout }}"

- name: "Update facts for {{ worker.name }}"
  ansible.utils.update_fact:
    updates:
      - path: "clusters_dict['{{ worker.name }}'].token"
        value: "{{ access_token }}"
  register: updated_data

- set_fact:
    clusters_dict: "{{ updated_data.clusters_dict }}"

- name: Check that token exists
  fail:
    msg: "Token is not properly stored!\n{{ access_token }}"
  when: access_token | length == 0

- name: Create Github access secret in infra namespace
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_ci_namespace }}"
    state: present
    src: "{{ github_secret_path }}"
    verify_ssl: no
    apply: true

- name: Create skodjob-install access secret in CI namespaces
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ namespaceName }}"
    state: present
    src: "{{ skodjob_git_crypt_key }}"
    verify_ssl: no
    apply: true
  loop_control:
    loop_var: namespaceName
  loop:
    - "{{ infra_workflows_namespace }}"
    - "{{ infra_ci_namespace }}"

# TODO - investigate deletion of this
- name: Create Github access secret in openshift-pipelines namespace
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ openshift_pipelines_namespace }}"
    state: present
    src: "{{ github_secret_path }}"
    verify_ssl: no
    apply: true

- name: Create cluster access secret for ArgoCD, Argo Workflows and Tekton
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ namespaceName }}"
    state: present
    template: templates/cluster-secret.yaml.j2
    verify_ssl: no
    apply: true
  loop_control:
    loop_var: namespaceName
  loop:
    - "{{ infra_argo_namespace }}"
    - "{{ infra_workflows_namespace }}"
    - "{{ openshift_pipelines_namespace }}"
    - "{{ infra_ci_namespace }}"

- name: Create Quay access secret
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ worker.name }}"
    namespace: "default"
    state: present
    verify_ssl: no
    apply: true
    src: "{{ quay_io_secret_path }}"
