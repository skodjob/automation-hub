---
- name: Create {{ infra_workflows_namespace }} namespace on Infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    verify_ssl: no
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ infra_workflows_namespace }}"
        labels:
          project: "skodjob"
          secret: "cert-manager"
          strimzi.io/sync-secrets: "{{ infra_workflows_namespace }}"

- name: Clean helm releases for workflows
  shell: "oc delete secret -l owner=helm -n {{ infra_workflows_namespace }} || true"
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}/{{ infra_context_name }}"

- name: Make default SA admin in {{ infra_workflows_namespace }} namespace
  shell: "oc adm policy add-role-to-user admin system:serviceaccount:{{ infra_workflows_namespace }}:default -n {{ infra_workflows_namespace }}"
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}/{{ infra_context_name }}"

- name: Add Argo Helm Repo
  kubernetes.core.helm_repository:
    name: argo
    url: https://argoproj.github.io/argo-helm

- name: Install Argo Workflow
  kubernetes.core.helm:
    name: "{{ infra_workflows_namespace }}"
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    chart_ref: argo/argo-workflows
    release_namespace: "{{ infra_workflows_namespace }}"
    create_namespace: True
    force: True
    wait: True
    replace: True
    update_repo_cache: True
    values:
      commonLabels:
        app: skodjob
        project: skodjob
      server:
        replicas: 3
        authModes:
          - sso
        ingress:
          enabled: true
          hosts:
            - "{{ argo_workflows_url }}"
          tls:
            - secretName: "{{ cm_certificate_secret }}"
              hosts:
                - "{{ argo_workflows_url }}"
        # Configuration for SSO - using ArgoCD Dex server that is connected to OpenShift OAuth Proxy
        sso:
          enabled: true
          insecureSkipVerify: false
          issuer: "https://{{ argo_cd_url }}/api/dex"
          sessionExpiry: 240h
          clientId:
            name: "{{ argo_workflows_sso_secret_name }}"
            key: client-id
          clientSecret:
            name: "{{ argo_workflows_sso_secret_name }}"
            key: client-secret
          redirectUrl: "https://{{ argo_workflows_url }}/oauth2/callback"
          # RBAC
          rbac:
            enabled: false
          scopes:
            - groups

- name: Install Argo Events
  kubernetes.core.helm:
    name: "{{ infra_workflows_namespace }}-events"
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    chart_ref: argo/argo-events
    release_namespace: "{{ infra_workflows_namespace }}"
    create_namespace: True
    purge: True
    force: True
    wait: True
    replace: True
    update_repo_cache: True
    values:
      openshift: true

- name: Create EventBus and ServiceAccount
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_workflows_namespace }}"
    state: present
    verify_ssl: no
    src: "{{ item }}"
    apply: true
  with_fileglob: 'templates/argo-workflows/install/*'
  register: eventBus

- name: Sleep for 5 seconds and continue with play
  wait_for:
    timeout: 5
  when: eventBus.changed

- name: Wait for EventBus creation
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_workflows_namespace }}"
    kind: EventBus
    api_version: argoproj.io/v1alpha1
    name: skodjob
    wait: true
    verify_ssl: no
    wait_condition:
      type: Deployed
      status: True
