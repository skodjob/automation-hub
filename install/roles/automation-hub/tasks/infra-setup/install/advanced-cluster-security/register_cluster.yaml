- name: Check if api_token exists
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: stackrox-api-token
    namespace: "{{ acs_namespace }}"
    verify_ssl: no
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
  register: token

- name: Check if init-bundle exists
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Secret
    name: stackrox-init-bundle
    namespace: "{{ acs_namespace }}"
    verify_ssl: no
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
  register: init_bundle

- name: Generate api token
  shell: |
    curl -k -X POST -u "admin:`oc get secret central-htpasswd -o yaml -n {{ acs_namespace }} | grep "password" | awk '{print $2}' | base64 -d`" "$ROX_ENDPOINT/v1/apitokens/generate" -d '{"name":"admin-{{ lookup('community.general.random_string', length=4, special=False) }}", "role": "Admin"}' | jq .token > {{ acs_api_token_file }}
    oc create secret generic stackrox-api-token --from-file token={{ acs_api_token_file }} -n "{{ acs_namespace }}"
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}/{{ infra_context_name }}"
  when: token.resources | length == 0

- name: Generate init bundle
  shell: |
    oc get secret stackrox-api-token -n {{ acs_namespace }} -o jsonpath={.data.token} | base64 -d > {{ acs_api_token_file }}
    roxctl -e {{ acs_central_url }} --token-file={{ acs_api_token_file }} central init-bundles generate init-bundle-{{ lookup('community.general.random_string', length=4, special=False) }} --insecure-skip-tls-verify --output-secrets {{ acs_init_secrets }}
    oc create secret generic stackrox-init-bundle --from-file deploy={{ acs_init_secrets }} -n "{{ acs_namespace }}"
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}/{{ infra_context_name }}"
  when: init_bundle.resources | length == 0

- name: Get deployment files for stackrox
  shell: |
    oc get secret stackrox-init-bundle -n {{ acs_namespace }} -o jsonpath={.data.deploy} | base64 -d > {{ acs_init_secrets }}
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}/{{ infra_context_name }}"

- name: "Create {{ acs_stackrox_namespace }} on {{ clusterName }} cluster"
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ clusterName }}"
    api_version: v1
    kind: Namespace
    name: "{{ acs_stackrox_namespace }}"
    verify_ssl: no
    state: present

- name: Deploy secrets for stackrox
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ clusterName }}"
    namespace: "{{ acs_stackrox_namespace }}"
    state: present
    apply: true
    verify_ssl: no
    src: "{{ acs_init_secrets }}"

- name: "Create secured cluster {{ clusterName }} cluster"
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ clusterName }}"
    namespace: "{{ acs_stackrox_namespace }}"
    state: present
    apply: true
    verify_ssl: no
    template: "{{ item }}"
  loop:
    - templates/acs/03-secure-cluster.yaml.j2