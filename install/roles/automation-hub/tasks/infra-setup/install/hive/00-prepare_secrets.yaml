# Create AWS secret
# Create cloud-yaml secret
# Create pull secret
---
- name: "Collect AWS secrets"
  ansible.builtin.set_fact:
    aws_secret: "{{ lookup('community.hashi_vault.hashi_vault', 
    'secret={{ aws_secret_path }} 
    auth_method=approle 
    role_id={{ vault_role_id }} 
    secret_id={{ vault_secret_id }} 
    url={{ vault_url }}
    return_format=dict',
    validate_certs=False) }}"

- name: "Collect clouds.yaml"
  ansible.builtin.set_fact:
    openstack_clouds_secret: "{{ lookup('community.hashi_vault.hashi_vault', 
    'secret={{ openstack_secret_path }} 
    auth_method=approle 
    role_id={{ vault_role_id }} 
    secret_id={{ vault_secret_id }} 
    url={{ vault_url }}
    return_format=dict',
    validate_certs=False) }}"

- name: "Collect OpenShift pull secret"
  ansible.builtin.set_fact:
    openshift_pull_secret: "{{ lookup('community.hashi_vault.hashi_vault', 
    'secret={{ pull_secret_path }} 
    auth_method=approle 
    role_id={{ vault_role_id }} 
    secret_id={{ vault_secret_id }} 
    url={{ vault_url }}
    return_format=dict',
    validate_certs=False) }}"

- name: "Collect Kafka SSH keys"
  ansible.builtin.set_fact:
    kafka_ssh_secret: "{{ lookup('community.hashi_vault.hashi_vault', 
    'secret={{ kafka_ssh_secret_path }} 
    auth_method=approle 
    role_id={{ vault_role_id }} 
    secret_id={{ vault_secret_id }} 
    url={{ vault_url }}
    return_format=dict',
    validate_certs=False) }}"

- name: "Create or Patch AWS secret"
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ hive_namespace }}"
    apply: true
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: "{{ aws_secret_name }}"
      data:
        access_key_id: "{{ aws_secret['aws_access_key_id'] | b64encode }}"
        access_key_secret: "{{ aws_secret['aws_secret_access_key'] | b64encode }}"

- name: "Create or Patch clouds.yaml secret"
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ hive_namespace }}"
    apply: true
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: "{{ openstack_clouds_yaml }}"
      data:
        clouds.yaml: "{{ openstack_clouds_secret['clouds.yaml'] | b64encode }}"

- name: "Create or Patch pull-secret"
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ hive_namespace }}"
    apply: true
    definition:
      apiVersion: v1
      kind: Secret
      type: kubernetes.io/dockerconfigjson
      metadata:
        name: "{{ openshift_pull_secret_name }}"
      data:
        .dockerconfigjson: "{{ openshift_pull_secret['pull-secret-json'] | b64encode }}"

- name: "Create or Patch Kafka ssh secret"
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ hive_namespace }}"
    apply: true
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: "{{ kafka_ssh_secret_name }}"
      data:
        ssh-publickey: "{{ kafka_ssh_secret['pub'] | b64encode }}"
        ssh-privatekey: "{{ kafka_ssh_secret['key'] | b64encode }}"

- name: "Create $HOME/.config/openstack directory"
  ansible.builtin.file:
    path: $HOME/.config/openstack
    state: directory
    mode: '0755'

- name: "Create $HOME/.config/openstack/clouds.yaml"
  copy:
    content: "{{ openstack_clouds_secret['clouds.yaml'] }}"
    dest: $HOME/.config/openstack/clouds.yaml
