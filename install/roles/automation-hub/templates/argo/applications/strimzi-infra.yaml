apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: strimzi-infra
spec:
  syncPolicy:
    preserveResourcesOnDeletion: true
  generators:
    - matrix:
        generators:
          - git:
              files:
                - path: strimzi/**/argo-config.yaml
              repoURL: 'https://github.com/skodjob/deployment-hub'
              revision: HEAD
          - clusters:
              selector:
                matchLabels:
                  environment: upstream
    - matrix:
        generators:
          - git:
              files:
                - path: infra/strimzi/argo-config.yaml
              repoURL: 'https://github.com/skodjob/deployment-hub'
              revision: HEAD
          - clusters:
              selector:
                matchLabels:
                  environment: upstream
  template:
    metadata:
      name: '{% raw %}{{appname}}-{{name}}{% endraw %}'
      labels:
        project: skodjob
        app: strimzi
    spec:
      project: strimzi
      source:
        repoURL: https://github.com/skodjob/deployment-hub
        targetRevision: HEAD
        path: '{% raw %}{{source}}{% endraw %}'
        kustomize:
          patches:
            # Replace Keycloak URLs
            - target:
                kind: KafkaMirrorMaker2
                name: replicator-ra
              patch: |-
                - op: replace
                  path: "/spec/clusters/2/authentication/tokenEndpointUri"
                  value: "https://skodjob-keycloak-ingress-skodjob-keycloak.apps.skodjob-infra.{{ cluster_domain }}/realms/{{ rhbk_realm_name }}/protocol/openid-connect/token"
            - target:
                kind: Kafka
                name: ra
              patch: |-
                - op: replace
                  path: "/spec/kafka/listeners/1/authentication/jwksEndpointUri"
                  value: "https://skodjob-keycloak-ingress-skodjob-keycloak.apps.skodjob-infra.{{ cluster_domain }}/realms/{{ rhbk_realm_name }}/protocol/openid-connect/certs"
                - op: replace
                  path: "/spec/kafka/listeners/1/authentication/validIssuerUri"
                  value: "https://skodjob-keycloak-ingress-skodjob-keycloak.apps.skodjob-infra.{{ cluster_domain }}/realms/{{ rhbk_realm_name }}"
                - op: replace
                  path: "/spec/kafka/listeners/2/authentication/jwksEndpointUri"
                  value: "https://skodjob-keycloak-ingress-skodjob-keycloak.apps.skodjob-infra.{{ cluster_domain }}/realms/{{ rhbk_realm_name }}/protocol/openid-connect/certs"
                - op: replace
                  path: "/spec/kafka/listeners/2/authentication/validIssuerUri"
                  value: "https://skodjob-keycloak-ingress-skodjob-keycloak.apps.skodjob-infra.{{ cluster_domain }}/realms/{{ rhbk_realm_name }}"
                - op: replace
                  path: "/spec/kafka/authorization/tokenEndpointUri"
                  value: "https://skodjob-keycloak-ingress-skodjob-keycloak.apps.skodjob-infra.{{ cluster_domain }}/realms/{{ rhbk_realm_name }}/protocol/openid-connect/token"
            - target:
                kind: Deployment
                labelSelector: "kafka=oauth"
              patch: |-
                - op: replace
                  path: "/spec/template/spec/containers/0/env/2/value"
                  value: "https://skodjob-keycloak-ingress-skodjob-keycloak.apps.skodjob-infra.{{ cluster_domain }}/realms/{{ rhbk_realm_name }}/protocol/openid-connect/token"
      syncPolicy:
        automated:
          prune: false
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
        managedNamespaceMetadata:
          labels:
            project: skodjob
            app: strimzi
            strimzi.io/sync-secrets: "{% raw %}{{namespace}}{% endraw %}"
      destination:
        name: '{% raw %}{{name}}{% endraw %}'
        namespace: '{% raw %}{{namespace}}{% endraw %}'
