---
# This is a secret used for Dex server to be usable by Argo Workflows
apiVersion: v1
kind: Secret
metadata:
  name: argo-workflows-sso
  labels:
    project: skodjob
    app: argo
  annotations:
    replicator.v1.mittwald.de/replicate-to: "{{ infra_workflows_namespace }}"
data:
  client-id: {{ argo_workflows_client_id }}
  client-secret: {{ argo_workflows_client_secret }}
---
apiVersion: argoproj.io/v1beta1
kind: ArgoCD
metadata:
  name: skodjob-gitops
  labels:
    project: skodjob
spec:
  server:
    replicas: 3
    autoscale:
      enabled: true
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true
      tls:
        termination: reencrypt
    service:
      type: ''
  grafana:
    enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
    route:
      enabled: false
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  initialSSHKnownHosts: {}
  applicationSet:
    resources:
      limits:
        cpu: '3'
        memory: 2Gi
      requests:
        cpu: 250m
        memory: 512Mi
  rbac:
    defaultPolicy: "role:readonly"
    policy: |
      g, system:cluster-admins, role:admin
      g, cluster-admins, role:admin
      g, system:authenticated:oauth, role:admin
    scopes: '[groups]'
  repo:
    resources:
      limits:
        cpu: '1'
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 256Mi
  resourceExclusions: |
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
  sso:
    provider: dex
    groups:
      - default
    dex:
      openShiftOAuth: true
      resources:
        limits:
          cpu: 500m
          memory: 256Mi
        requests:
          cpu: 250m
          memory: 128Mi
      env:
        - name: ARGO_WORKFLOWS_SSO_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ argo_workflows_sso_secret_name }}
              key: client-secret
      config: |
        # Setting staticClients allows Argo Workflows to use Argo CD's Dex installation for authentication
        staticClients:
          # This is the OIDC client ID in plaintext
          - id: {{ argo_workflows_client_id }}
            name: Argo Workflows
            redirectURIs:
              - https://{{ argo_workflows_url }}/oauth2/callback
            secretEnv: ARGO_WORKFLOWS_SSO_CLIENT_SECRET
  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  redis:
    resources:
      limits:
        cpu: 1000m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 128Mi
  controller:
    processors: {}
    logLevel: debug
    resources:
      limits:
        cpu: '2'
        memory: 4Gi
      requests:
        cpu: 250m
        memory: 2Gi
    sharding: {}
    tls:
      ca:
        secretName: skodjob-signed-certificate