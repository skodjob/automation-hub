apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: secret-copy
spec:
  schedule: "*/5 * * * *"
  concurrencyPolicy: "Replace"
  startingDeadlineSeconds: 0
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1
  workflowSpec:
    entrypoint: secret-copy
    onExit: exit-handler
    templates:
      - name: secret-copy
        ttlStrategy:
          secondsAfterCompletion: 300
        script:
          image: quay.io/tealc/tealc-ee:latest
          command: [bash]
          source: |
            #!/usr/bin/env bash
            export WORKDIR=$(pwd)/automation-hub
            git clone https://github.com/skodjob/automation-hub.git $CURRENT_DIR
            
            TARGET_NAMESPACE=strimzi-kafka ${WORKDIR}/scripts/copy-secrets.sh
            TARGET_NAMESPACE=strimzi-kafka-kraft ${WORKDIR}/scripts/copy-secrets.sh
            TARGET_NAMESPACE=strimzi-mirror ${WORKDIR}/scripts/copy-secrets.sh
            TARGET_NAMESPACE=strimzi-mirror-kraft ${WORKDIR}/scripts/copy-secrets.sh
          env:
            - name: SOURCE_TOKEN
              valueFrom:
                secretKeyRef:
                  name: worker-02-access
                  key: token
            - name: SOURCE_URL
              valueFrom:
                secretKeyRef:
                  name: worker-02-access
                  key: server
            - name: TARGET_TOKEN
              valueFrom:
                secretKeyRef:
                  name: worker-01-access
                  key: token
            - name: TARGET_URL
              valueFrom:
                secretKeyRef:
                  name: worker-01-access
                  key: server
            - name: SOURCE_NAMESPACE
              value: "strimzi-kafka"
            - name: LABEL_SELECTOR
              value: "strimzi.io/cluster=heimdall"
      - name: exit-handler
        ttlStrategy:
          secondsAfterCompletion: 300
        steps:
          - - name: notify
              when: {% raw %}"{{workflow.status}} != Succeeded"{% endraw %}
              templateRef:
                name: slack-notify
                template: slack-notify
              arguments:
                parameters:
                  - name: message
                    value: {% raw %}"Workflow \\`{{ workflow.name }}\\` has status: \\`{{ workflow.status }}\\`!"{% endraw %}
                  - name: title
                    value: {% raw %}"{{ workflow.name }}"{% endraw %}
                  - name: status
                    value: {% raw %}"{{ workflow.status }}"{% endraw %}
                  - name: button_url
                    value: {% raw %}"{{ argo_workflow_url }}/workflows/argo/{{ workflow.name }}"{% endraw %}
                  - name: button_text
                    value: "Workflow link :argocd:"
                  - name: url
                    value: "{{ slackUrl }}"
