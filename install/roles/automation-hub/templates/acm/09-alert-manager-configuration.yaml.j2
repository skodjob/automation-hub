apiVersion: v1
kind: Secret
metadata:
  name: alertmanager-{{ suffix }}
  namespace: {{ namespace }}
  labels:
    project: skodjob
type: Opaque
stringData:
  slack.tmpl: |
    {% raw %}
    {{/* Alertmanager Silence link */}}
    {{ define "__alert_silence_link" -}}
        {{ .ExternalURL | reReplaceAll "///" "//" }}/silences/~new?alertname={{- .CommonLabels.alertname -}}
        {{- range .CommonLabels.SortedPairs -}}
            {{- if ne .Name "alertname" -}}
                &{{- .Name }}={{- .Value -}}
            {{- end -}}
        {{- end -}}
    {{- end }}

    {{/* Severity of the alert */}}
    {{ define "__alert_severity" -}}
        {{- if eq .CommonLabels.severity "critical" -}}
        *Severity:* `Critical`
        {{- else if eq .CommonLabels.severity "warning" -}}
        *Severity:* `Warning`
        {{- else if eq .CommonLabels.severity "major" -}}
        *Severity:* `Major`
        {{- else if eq .CommonLabels.severity "info" -}}
        *Severity:* `Info`
        {{- else -}}
        *Severity:* :question: {{ .CommonLabels.severity }}
        {{- end }}
    {{- end }}

    {{/* Title of the Slack alert */}}
    {{ define "slack.title" -}}
      [{{ .Status | toUpper -}}
      {{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{- end -}}
      ] {{ .CommonLabels.alertname }}
    {{- end }}


    {{/* Color of Slack attachment (appears as line next to alert )*/}}
    {{ define "slack.color" -}}
        {{ if eq .Status "firing" -}}
            {{ if eq .CommonLabels.severity "warning" -}}
                warning
            {{- else if eq .CommonLabels.severity "critical" -}}
                danger
            {{- else if eq .CommonLabels.severity "major" -}}
                danger
            {{- else -}}
                #439FE0
            {{- end -}}
        {{ else -}}
        good
        {{- end }}
    {{- end }}

    {{/* The text to display in the alert */}}
    {{ define "slack.text" -}}

        {{ template "__alert_severity" . }}
        {{- if (index .Alerts 0).Annotations.summary }}
        {{- "\n" -}}
        *Cluster:* `{{ .CommonLabels.clusterName }}`
        {{- "\n" -}}
        *Summary:* {{ (index .Alerts 0).Annotations.summary }}
        {{- end }}

        {{ range .Alerts }}

            {{- if .Annotations.description }}
            {{- "\n" -}}
            {{ .Annotations.description }}
            {{- "\n" -}}
            {{- end }}
            {{- if .Annotations.message }}
            {{- "\n" -}}
            {{ .Annotations.message }}
            {{- "\n" -}}
            {{- end }}

        {{- end }}

    {{- end }}
    {% endraw %}

  alertmanager.yaml: |
    global:
      resolve_timeout: 10m
      slack_api_url: {{ slack_api_alerts_infra_url }}

    route:
      group_by: ['alertname']
      group_wait: 1m
      group_interval: 5m
      repeat_interval: 12h
      receiver: 'default_blackhole'
      routes:
        - receiver: {{ receiver_strimzi }}
          matchers:
            - app = strimzi
        - receiver: {{ receiver_infra }}
          matchers:
            - alertname =~ "KubeAPIDown|etcdMembersDown|ClusterOperatorDown|KubeNodeNotReady|CollectorNodeDown|NodeClockNotSynchronising|ACMRemoteWriteError"
        - receiver: {{ receiver_infra }}
          matchers:
            - purpose = infra
    receivers:
      - name: 'default_blackhole'
      - name: 'tealc-infra'
        slack_configs:
        - channel: '#tealc-alerts-infra'
          api_url: {{ slack_api_alerts_infra_url }}
          color: '{% raw %}{{ template "slack.color" . }}{% endraw %}'
          title: '{% raw %}{{ template "slack.title" . }}{% endraw %}'
          text: '{% raw %}{{ template "slack.text" . }}{% endraw %}'
          send_resolved: true
          actions:
            - type: button
              text: 'ACM Grafana :grafana:'
              url: '{{ grafana_acm_url }}'
            - type: button
              text: 'Tealc Grafana :grafana:'
              url: '{{ grafana_tealc_url }}'
            - type: button
              text: 'ArgoCD :argocd:'
              url: '{{ argo_url }}'
            - type: button
              text: 'Silence :no_bell:'
              url: '{% raw %}{{ template "__alert_silence_link" . }}{% endraw %}'
      - name: 'strimzi'
        slack_configs:
        - channel: '#tealc-alerts-strimzi'
          api_url: {{ slack_api_alerts_strimzi_url }}
          color: '{% raw %}{{ template "slack.color" . }}{% endraw %}'
          title: '{% raw %}{{ template "slack.title" . }}{% endraw %}'
          text: '{% raw %}{{ template "slack.text" . }}{% endraw %}'
          send_resolved: true
          actions:
            - type: button
              text: 'Grafana :grafana:'
              url: '{{ grafana_tealc_url }}'
            - type: button
              text: 'ArgoCD :argocd:'
              url: '{{ argo_url }}'
            - type: button
              text: 'Silence :no_bell:'
              url: '{% raw %}{{ template "__alert_silence_link" . }}{% endraw %}'
    templates: ['/etc/alertmanager/config/**/*.tmpl']
