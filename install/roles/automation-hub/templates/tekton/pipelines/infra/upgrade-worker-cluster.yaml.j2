{% if cluster is defined %}
{% set name = cluster.name %}
{% endif %}
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: upgrade-{{ name }}-cluster-pipeline
  labels:
    project: skodjob
  annotations:
    argocd.argoproj.io/hook: PreSync
spec:
  workspaces:
    - name: pipeline-ws
  tasks:
    - name: upgrade
      timeout: 4h
      workspaces:
        - name: pipeline-ws
      taskSpec:
        workspaces:
          - name: pipeline-ws
        steps:
          - name: execute-tests
            image: quay.io/tealc/apophis:latest
            env:
              - name: OC_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: {{ name }}-tekton
                    key: token
              - name: OC_API_URL
                valueFrom:
                  secretKeyRef:
                    name: {{ name }}-tekton
                    key: server
            script: |
              set +x

              oc login --token $OC_TOKEN $OC_API_URL --insecure-skip-tls-verify=true

              set -x

              oc get clusterversion

              oc adm upgrade

              oc adm upgrade --to-latest=true

              sleep 120

              IS_UPGRADING="true"
              while [[ $IS_UPGRADING == "true" ]]; do
                if [[ "$(oc get clusterversion -o=jsonpath='{.items[0].status.history[0].completionTime}')" == "null" ]]; then
                  echo "Cluster is in upgrade state"
                else
                  IS_UPGRADING="false"
                fi
                sleep 10
              done
  finally:
    - name: notify-slack
      when:
        - input: $(tasks.status)
          operator: in
          values: ["Failed"]
      taskRef:
        name: send-to-webhook-slack
      params:
        - name: webhook-secret
          value: webhook-secret
        - name: message
          value: "PipelineRun `$(context.pipelineRun.name)` has status: `$(tasks.status)!`"
        - name: title
          value: "$(context.pipeline.name)"
        - name: status
          value: "$(tasks.status)"
        - name: button_url
          value: "{{ infra_console_url }}/k8s/ns/{{ infra_ci_namespace }}/tekton.dev~v1~PipelineRun/$(context.pipelineRun.name)"
        - name: button_text
          value: "Pipeline :tekton:"

---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: upgrade-{{ name }}-cluster-trigger-template
  labels:
    project: skodjob
spec:
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: upgrade-{{ name }}-cluster-
        labels:
          app: tealc
      spec:
        pipelineRef:
          name: upgrade-{{ name }}-cluster-pipeline
        workspaces:
          - name: pipeline-ws
            emptyDir: {}
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: upgrade-{{ name }}-cluster-triggerbinding
  labels:
    project: skodjob
spec:
  params:
    - name: message
      value: $(body)

---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: upgrade-{{ name }}-cluster-event-listener
  labels:
    listener: skodjob
    project: skodjob
spec:
  triggers:
    - name: upgrade-{{ name }}-cluster-webhook
      bindings:
        - ref: upgrade-{{ name }}-cluster-triggerbinding
      template:
        ref: upgrade-{{ name }}-cluster-trigger-template
  resources:
    kubernetesResource:
      spec:
        template:
          spec:
            containers:
            - resources:
                limits:
                  memory: "64Mi"
                  cpu: "50m"

---
# cron job as trigger
apiVersion: batch/v1
kind: CronJob
metadata:
  name: upgrade-{{ name }}-cluster-cron
  labels:
    project: skodjob
spec:
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1
  schedule: "0 */12 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: notify
              image: quay.io/tealc/apophis:latest
              args:
                - curl
                - -d
                - "{}"
                - -H
                - 'Content-Type: application/json'
                - el-upgrade-{{ name }}-cluster-event-listener.tealc-pipelines.svc.cluster.local:8080
          restartPolicy: Never
