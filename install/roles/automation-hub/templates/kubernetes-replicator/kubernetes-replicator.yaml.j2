apiVersion: v1
kind: ServiceAccount
metadata:
  name: replicator-kubernetes-replicator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: replicator-kubernetes-replicator
rules:
  - apiGroups: [ "" ]
    resources: [ "namespaces" ]
    verbs: [ "get", "watch", "list" ]
  - apiGroups: [""] # "" indicates the core API group
    resources: ["secrets", "configmaps", "serviceaccounts"]
    verbs: ["get", "watch", "list", "create", "update", "patch", "delete"]
  - apiGroups: ["rbac.authorization.k8s.io"]
    resources: ["roles", "rolebindings"]
    verbs: ["get", "watch", "list", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: replicator-kubernetes-replicator
roleRef:
  kind: ClusterRole
  name: replicator-kubernetes-replicator
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: replicator-kubernetes-replicator
    namespace: kube-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: replicator-kubernetes-replicator
  namespace: kube-system
  labels:
    app.kubernetes.io/name: kubernetes-replicator
    app.kubernetes.io/instance: replicator
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kubernetes-replicator
      app.kubernetes.io/instance: replicator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kubernetes-replicator
        app.kubernetes.io/instance: replicator
    spec:
      serviceAccountName: replicator-kubernetes-replicator
      securityContext: {}
      containers:
        - name: kubernetes-replicator
          securityContext: {}
          image: quay.io/mittwald/kubernetes-replicator:latest
          imagePullPolicy: Always
          args: []
          ports:
            - name: health
              containerPort: 9102
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
          resources: {}
