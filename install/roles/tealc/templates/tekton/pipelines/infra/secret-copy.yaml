apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: secret-copy-pipeline
  labels:
    project: tealc
  annotations:
    argocd.argoproj.io/hook: PreSync
spec:
  workspaces:
    - name: pipeline-ws
  tasks:
    - name: copy-secret
      workspaces:
        - name: pipeline-ws
          workspace: pipeline-ws
      taskSpec:
        workspaces:
          - name: pipeline-ws
        steps:
          - name: tealc-clone
            image: quay.io/rh_integration/strimzi-tools:latest
            script: |
              export CURRENT_DIR=$(workspaces.pipeline-ws.path)/tealc
              git clone https://github.com/ExcelentProject/tealc.git $CURRENT_DIR
          - name: copy-secrets
            env:
              - name: SOURCE_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: worker-02-tekton
                    key: token
              - name: SOURCE_URL
                valueFrom:
                  secretKeyRef:
                    name: worker-02-tekton
                    key: server
              - name: TARGET_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: worker-01-tekton
                    key: token
              - name: TARGET_URL
                valueFrom:
                  secretKeyRef:
                    name: worker-01-tekton
                    key: server
              - name: SOURCE_NAMESPACE
                value: "strimzi-kafka"
              - name: LABEL_SELECTOR
                value: "strimzi.io/cluster=heimdall"
            image: quay.io/rh_integration/strimzi-tools:latest
            script: |
              TARGET_NAMESPACE=strimzi-kafka $(workspaces.pipeline-ws.path)/tealc/scripts/copy-secrets.sh
              echo "[INFO] Done!"
              TARGET_NAMESPACE=strimzi-kafka-kraft $(workspaces.pipeline-ws.path)/tealc/scripts/copy-secrets.sh
              echo "[INFO] Done!"
              TARGET_NAMESPACE=strimzi-mirror $(workspaces.pipeline-ws.path)/tealc/scripts/copy-secrets.sh
              echo "[INFO] Done!"
              TARGET_NAMESPACE=strimzi-mirror-kraft $(workspaces.pipeline-ws.path)/tealc/scripts/copy-secrets.sh
              echo "[INFO] Done!"
  finally:
    - name: notify-slack
      when:
        - input: $(tasks.status)
          operator: in
          values: ["Failed"]
      taskRef:
        name: send-to-webhook-slack
      params:
        - name: webhook-secret
          value: webhook-secret
        - name: message
          value: "Pipeline `$(context.pipeline.name)`:`$(context.pipelineRun.name)` failed!"
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: secret-copy-trigger-template
  labels:
    project: tealc
spec:
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        generateName: secret-copy-
        labels:
          app: tealc
      spec:
        pipelineRef:
          name: secret-copy-pipeline
        workspaces:
          - name: pipeline-ws
            emptyDir: {}
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: secret-copy-triggerbinding
  labels:
    project: tealc
spec:
  params:
    - name: message
      value: $(body)
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: secret-copy
  labels:
    listener: tealc
    project: tealc
spec:
  triggers:
    - name: secret-copy-webhook
      bindings:
        - ref: secret-copy-triggerbinding
      template:
        ref: secret-copy-trigger-template
  resources:
    kubernetesResource:
      spec:
        template:
          spec:
            containers:
              - resources:
                  limits:
                    memory: "64Mi"
                    cpu: "50m"
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: el-secret-copy
  labels:
    project: tealc
spec:
  to:
    kind: Service
    name: el-secret-copy
    weight: 100
  port:
    targetPort: http-listener


---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: secret-copy
  labels:
    project: tealc
spec:
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1
  concurrencyPolicy: Replace
  schedule: "*/5 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          volumes:
            - name: workspace
              emptyDir: {}
          containers:
            - name: trigger
              image: quay.io/rh_integration/strimzi-tools:latest
              command:
                - /bin/sh
              args:
                - -ce
                - |
                  cat <<EOF > /workspace/post-body.json
                  {}
                  EOF
                  curl -d @/workspace/post-body.json $SINK_URL
              volumeMounts:
                - mountPath: /workspace
                  name: workspace
              env:
                - name: SINK_URL
                  value: "el-secret-copy.tealc-pipelines.svc.cluster.local:8080"
          restartPolicy: Never
