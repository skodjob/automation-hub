---
- name: "Create namespace for Loki operator on {{ clusterName }}"
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ clusterName }}"
    state: present
    verify_ssl: no
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ item }}"
        labels:
          'openshift.io/cluster-monitoring': "true"
  loop:
    - "{{ openshift_logging_namespace }}"
    - "openshift-operators-redhat"

- name: "Create Loki operator group and subscription on {{ clusterName }}"
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ clusterName }}"
    namespace: "openshift-operators-redhat"
    state: present
    apply: true
    verify_ssl: no
    template: "{{ item }}"
  loop:
    - templates/logging/install/loki/00-operator-group.yaml.j2
    - templates/logging/install/loki/01-loki-operator-sub.yaml.j2
  register: loki

- name: Sleep for 5 seconds and continue with play
  wait_for:
    timeout: 5
  when: loki.changed

- name: "Wait for Loki operator on {{ clusterName }}"
  kubernetes.core.k8s_info:
    kubeconfig: "{{ kubeconfig_path }}/{{ clusterName }}"
    namespace: "openshift-operators-redhat"
    kind: Deployment
    name: loki-operator-controller-manager
    wait: true
    verify_ssl: no
    wait_condition:
      type: Available
      status: True
      reason: MinimumReplicasAvailable
  retries: 20
  delay: 5

- name: "Create Loki access secret on {{ clusterName }}"
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig_path }}/{{ clusterName }}"
    namespace: "{{ openshift_logging_namespace }}"
    apply: true
    definition:
      apiVersion: v1
      kind: Secret
      type: Opaque
      metadata:
        name: "logging-loki-s3"
      data:
        access_key_id: "{{ aws_access_key_id | b64encode }}"
        access_key_secret: "{{ aws_access_key_secret | b64encode }}"
        endpoint: "{{ aws_endpoint | b64encode }}"
        region: "{{ aws_region | b64encode }}"
        bucketnames: "{{ bucketname | b64encode }}"
  vars:
    bucketname: "tealc-{{ clusterName }}-loki"

- name: "Remove Grafana access on {{ clusterName }} to avoid conflicts"
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ clusterName }}"
    namespace: "{{ openshift_logging_namespace }}"
    state: absent
    verify_ssl: no
    template: "{{ item }}"
  loop:
    - templates/logging/install/loki/04-grafana-access.yaml.j2

- name: "Create Loki stack on {{ clusterName }}"
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ clusterName }}"
    namespace: "{{ openshift_logging_namespace }}"
    state: present
    apply: true
    verify_ssl: no
    force: true
    template: "{{ item }}"
  loop:
    - templates/logging/install/loki/03-loki-stack.yaml.j2
    - templates/logging/install/loki/04-grafana-access.yaml.j2
