---
- name: Create Argo namespace on Infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    name: "{{ infra_argo_namespace }}"
    api_version: v1
    kind: Namespace
    state: present
  when:
    - '"admin-access" in ansible_run_tags'

- name: Create image pull secret on infra cluster
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
    namespace: "{{ infra_argo_namespace }}"
    state: present
    src: "{{ grafana_docker_secret_path }}"


#########################################################
# Openshift
#########################################################
- name: Install argo openshift
  block:
    - name: Create argo subscription
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
        state: present
        src: files/argo/install/openshift/sub.yaml
      when:
        - '"admin-access" in ansible_run_tags'

    - name: Sleep for 60 seconds and continue with play
      wait_for:
        timeout: 60
      when:
        - '"admin-access" in ansible_run_tags'

    - name: Wait for argo operator on Infra cluster
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
        namespace: "{{ openshift_operators_namespace }}"
        kind: Deployment
        name: gitops-operator-controller-manager
        wait: true
        wait_condition:
          type: Available
          status: True
          reason: MinimumReplicasAvailable
      when:
        - '"admin-access" in ansible_run_tags'

    - name: Create argo app
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
        namespace: "{{ infra_argo_namespace }}"
        state: present
        src: files/argo/install/openshift/argocd.yaml

    - name: Sleep for 60 seconds and continue with play
      wait_for:
        timeout: 60

    - name: Wait for argo server on infra cluster
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
        namespace: "{{ infra_argo_namespace }}"
        kind: Deployment
        name: argocd-server
        wait: true
        wait_condition:
          type: Available
          status: True
          reason: MinimumReplicasAvailable

    - name: Wait for argo dex on infra cluster
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
        namespace: "{{ infra_argo_namespace }}"
        kind: Deployment
        name: argocd-dex-server
        wait: true
        wait_condition:
          type: Available
          status: True
          reason: MinimumReplicasAvailable
  when: not is_kubernetes


#########################################################
# Kubernetes
#########################################################

- name: Install agro kubernetes
  block:
    - name: Install Argo
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
        namespace: "{{ infra_argo_namespace }}"
        state: present
        src: files/argo/install/kubernetes/argo-install.yaml

    - name: Wait for Argo readiness
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
        namespace: "{{ infra_argo_namespace }}"
        kind: Deployment
        name: argocd-server
        wait: true
        wait_condition:
          type: Available
          status: True
          reason: MinimumReplicasAvailable

    - name: Apply Argo rbac
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
        namespace: "{{ infra_argo_namespace }}"
        state: present
        src: files/argo/install/kubernetes/argocd-rbac-cm.yaml
  when: is_kubernetes
