---
- name: Install ReportPortal openshift
  block:
    - name: Create ReportPortal namespace on Infra cluster
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
        name: "{{ rp_namespace }}"
        api_version: v1
        kind: Namespace
        state: present
      when:
        - '"admin-access" in ansible_run_tags'

    - name: Create ReportPortal subscription
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
        state: present
        src: files/report_portal/install/rp-subscription.yaml
      when:
        - '"admin-access" in ansible_run_tags'

    - name: Sleep for 60 seconds and continue with play
      wait_for:
        timeout: 60
      when:
        - '"admin-access" in ansible_run_tags'

    - name: Wait for ReportPortal operator on Infra cluster
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
        namespace: "{{ openshift_operators_namespace }}"
        kind: Deployment
        name: reportportal-operator-controller-manager
        wait: true
        wait_condition:
          type: Available
          status: True
          reason: MinimumReplicasAvailable
      when:
        - '"admin-access" in ansible_run_tags'

    - name: Create ReportPortal instance
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
        namespace: "{{ rp_namespace }}"
        state: present
        template: templates/report_portal/install/rp-instance.yaml.j2
      when:
        - '"admin-access" in ansible_run_tags'

    - name: Sleep for 60 seconds and continue with play
      wait_for:
        timeout: 60
      when:
        - '"admin-access" in ansible_run_tags'

    - name: Wait for ReportPortal instance on Infra cluster
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
        namespace: "{{ rp_namespace }}"
        kind: Deployment
        name: api
        wait: true
        wait_condition:
          type: Available
          status: True
          reason: MinimumReplicasAvailable
      when:
        - '"admin-access" in ansible_run_tags'

    - name: Get ReportPortal UI token
      shell: "curl -k --header 'Content-Type: application/x-www-form-urlencoded' --request POST --data 'grant_type=password&username={{ rp_admin_user }}&password={{ rp_admin_password_old }}' --user 'ui:uiman' https://reportportal-{{ rp_namespace }}.{{ rp_app_domain }}/uat/sso/oauth/token"
      register: rp_ui_token_response
      when:
        - '"admin-access" in ansible_run_tags'

    - name: Generate API token
      shell: "curl -k --header 'Authorization: Bearer {{ (rp_ui_token_response.stdout | from_json).access_token }}' --request POST https://reportportal-{{ rp_namespace }}.{{ rp_app_domain }}/uat/sso/me/apitoken"
      when:
        - '"admin-access" in ansible_run_tags'

    - name: Get ReportPortal API token
      shell: "curl -k --header 'Authorization: Bearer {{ (rp_ui_token_response.stdout | from_json).access_token }}' --request GET https://reportportal-{{ rp_namespace }}.{{ rp_app_domain }}/uat/sso/me/apitoken"
      register: rp_api_token_response
      when:
        - '"admin-access" in ansible_run_tags'

    - name: Change admin password
      shell: 'curl -k -X POST "https://reportportal-{{ rp_namespace }}.{{ rp_app_domain }}/api/v1/user/password/change" -H  "accept: */*" -H  "Content-Type: application/json" -H  "Authorization: Bearer {{ (rp_api_token_response.stdout | from_json).access_token }}" -d "{  \"newPassword\": \"{{ rp_admin_password }}\",  \"oldPassword\": \"{{ rp_admin_password_old }}\"}"'
      when:
        - '"admin-access" in ansible_run_tags'

    - name: Create project TEALC
      shell: 'curl -k -X POST "https://reportportal-{{ rp_namespace }}.{{ rp_app_domain }}/api/v1/project" -H  "accept: */*" -H  "Content-Type: application/json" -H  "Authorization: Bearer {{ (rp_api_token_response.stdout | from_json).access_token }}" -d "{  \"entryType\": \"INTERNAL\",  \"projectName\": \"{{ rp_project_name }}\"}"'
      when:
        - '"admin-access" in ansible_run_tags'

    - name: Create ReportPotal access secret
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          type: Opaque
          metadata:
            name: "{{ rp_secret_name }}"
            namespace: "{{ infra_ci_namespace }}"
          data:
            token: "{{ (rp_api_token_response.stdout | from_json).access_token | b64encode }}"
            endpoint: "{{ http://gateway.report-portal.svc.cluster.local:8081 | b64encode }}"
      when:
        - '"admin-access" in ansible_run_tags'

    - name: Create ReportPotal access secret
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}/{{ infra_context_name }}"
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          type: Opaque
          metadata:
            name: "{{ rp_secret_name }}"
            namespace: "{{ infra_ci_namespace }}"
          data:
            token: "{{ (rp_api_token | b64encode }}"
            endpoint: "{{ rp_url | b64encode }}"
      when:
        - '"admin-access" not in ansible_run_tags'

    - name: Create dashboard
      ansible.builtin.uri:
        url: "https://reportportal-{{ rp_namespace }}.{{ rp_app_domain }}/api/v1/{{ rp_project_name }}/dashboard"
        method: POST
        body: '{
          "description": "Automatically generated dashboard",
          "name": "Tealc-dashboard",
          "share": "true"
        }'
        force_basic_auth: no
        status_code: 201
        body_format: json
        validate_certs: no
        headers:
          accept: "*/*"
          Content-Type: application/json
          Authorization: "Bearer {{ (rp_api_token_response.stdout | from_json).access_token }}"
      register: dashboard_creation

    - name: Create filter
      ansible.builtin.uri:
        url: "https://reportportal-{{ rp_namespace }}.{{ rp_app_domain }}/api/v1/{{ rp_project_name }}/filter"
        method: POST
        body: '{
              "name": "test-filter",
                "conditions": [
                {
                  "filteringField": "attributeValue",
                  "condition": "has",
                  "value": "thor-test-suite"
                }
              ],
              "orders": [
                {
                  "sortingColumn": "number",
                  "isAsc": "false"
                },
                {
                  "sortingColumn": "startTime",
                  "isAsc": "false"
                }
              ],
              "description": "Automatically generated filter",
              "share": "true",
              "type": "launch"
          }'
        force_basic_auth: no
        status_code: 201
        body_format: json
        validate_certs: no
        headers:
          accept: "*/*"
          Content-Type: application/json
          Authorization: "Bearer {{ (rp_api_token_response.stdout | from_json).access_token }}"
      register: filter_creation

    - name: Create widget launchStatistics
      ansible.builtin.uri:
        url: "https://reportportal-{{ rp_namespace }}.{{ rp_app_domain }}/api/v1/{{ rp_project_name }}/widget"
        method: POST
        body: '{
          "contentParameters": {
            "contentFields": [
              "statistics$executions$total",
              "statistics$executions$passed",
              "statistics$executions$failed",
              "statistics$executions$skipped",
              "statistics$defects$product_bug$pb001",
              "statistics$defects$automation_bug$ab001",
              "statistics$defects$system_issue$si001",
              "statistics$defects$no_defect$nd001",
              "statistics$defects$to_investigate$ti001"
            ],
            "itemsCount": 1,
            "widgetOptions": {}
          },
          "description": "Automatically generated widget",
          "filterIds": [
            {{ filter_creation.json.id }}
          ],
          "name": "launch-statistics-widget",
          "share": "true",
          "widgetType": "launchStatistics"
        }'
        force_basic_auth: no
        status_code: 201
        body_format: json
        validate_certs: no
        headers:
          accept: "*/*"
          Content-Type: application/json
          Authorization: "Bearer {{ (rp_api_token_response.stdout | from_json).access_token }}"
      register: launch_statistics_widget_creation

    - name: Create widget statisticTrend
      ansible.builtin.uri:
        url: "https://reportportal-{{ rp_namespace }}.{{ rp_app_domain }}/api/v1/{{ rp_project_name }}/widget"
        method: POST
        body: '{
          "contentParameters": {
            "contentFields": [
              "statistics$executions$total",
              "statistics$executions$passed",
              "statistics$executions$failed",
              "statistics$executions$skipped",
              "statistics$defects$product_bug$pb001",
              "statistics$defects$automation_bug$ab001",
              "statistics$defects$system_issue$si001",
              "statistics$defects$no_defect$nd001",
              "statistics$defects$to_investigate$ti001"
            ],
            "itemsCount": 72,
            "widgetOptions": {
              "timeline": "launch",
              "viewMode": "area-spline",
              "zoom": false
            }
          },
          "description": "Automatically generated widget",
          "filterIds": [
            {{ filter_creation.json.id }}
          ],
          "name": "statistic-trend-widget",
          "share": "true",
          "widgetType": "statisticTrend"
        }'
        force_basic_auth: no
        status_code: 201
        body_format: json
        validate_certs: no
        headers:
          accept: "*/*"
          Content-Type: application/json
          Authorization: "Bearer {{ (rp_api_token_response.stdout | from_json).access_token }}"
      register: statistic_trend_widget_widget_creation

    - name: Add widget to dashboard
      ansible.builtin.uri:
        url: "https://reportportal-{{ rp_namespace }}.{{ rp_app_domain }}/api/v1/{{ rp_project_name }}/dashboard/{{ dashboard_creation.json.id }}/add"
        method: PUT
        body: '{
            "addWidget": {
              "share": "true",
              "widgetId": {{ item.id }},
              "widgetName": "{{ item.name }}",
              "widgetPosition": {
              "positionX": 0,
              "positionY": 0
              },
                  "widgetSize": {
                  "height": 6,
                  "width": 6
              },
              "widgetType": "{{ item.type }}"
            }
        }'
        force_basic_auth: no
        status_code: 200
        body_format: json
        validate_certs: no
        headers:
          accept: "*/*"
          Content-Type: application/json
          Authorization: "Bearer {{ (rp_api_token_response.stdout | from_json).access_token }}"
      with_items:
        - {id: "{{ statistic_trend_widget_widget_creation.json.id }}", name: "statistic-trend-widget", type: "statisticTrend"}
        - {id: "{{ launch_statistics_widget_creation.json.id }}", name: "launch-statistics-widget", type: "launchStatistics"}

  when: not is_kubernetes
